@model AzureB2BInvite.Models.AADUserProfile

@{
    ViewBag.Title = "Edit Profile";
    var isMSA = (User.Identity.Name.IndexOf("live.com#") > -1);
    var remoteLink = "/profile/RemoteProfile";
    var disableSync = (isMSA) ? "disabled" : "";
    var syncTitle = (isMSA) ? "Profile sync is disabled for B2B accounts associated with a Microsoft Account (LiveID)" : "Copy your primary work profile into this guest profile";
}

@using (Html.BeginForm("Update", "Profile", new { area = "" }, FormMethod.Post, null))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-primary" style="margin-top:20px;">
        <div class="panel-title panel-heading">
            @ViewBag.Title
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                @if (ViewBag.UpdateStatus != null)
                {
                    <div class="alert alert-success alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        @ViewBag.UpdateStatus
                    </div>
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group control">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-default control"><span class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                        <button id="btnContinue" title="Continue to @ViewBag.RedirectLink" type="button" class="btn btn-default control"><span class="glyphicon glyphicon-list-alt"></span> Continue...</button>
                        <button @disableSync id="btnGetWorkProfile" type="button" title="@syncTitle" class="btn btn-default control"><span class="glyphicon glyphicon-retweet"></span> Sync Profile</button>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GivenName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GivenName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GivenName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(function () {
            $("#btnContinue").on("click", function () {
                location.href = '@ViewBag.RedirectLink';
            });
            $("#btnGetWorkProfile").on("click", function () {
                var win = window.open("@remoteLink");
            });
        });
        function LoadRemoteProfile(data) {
            $("#DisplayName").val(data.displayName);
            $("#GivenName").val(data.givenName);
            $("#Surname").val(data.surname);
            $("#StreetAddress").val(data.streetAddress);
            $("#City").val(data.city);
            $("#State").val(data.state);
            $("#PostalCode").val(data.postalCode);
            $("#Country").val(data.country);
            $("#Department").val(data.department);
            $("#JobTitle").val(data.jobTitle);
            $("#MobilePhone").val(data.mobilePhone);
        }
    </script>    
}

@section styles {
    <style type="text/css">
        div.form-group .btn {
            width: 110px !important;
        }
    </style>
}
